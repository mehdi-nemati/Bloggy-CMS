<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account-locked-out" xml:space="preserve">
    <value>User account locked out</value>
  </data>
  <data name="add-new-item" xml:space="preserve">
    <value>Add new item</value>
  </data>
  <data name="added-date" xml:space="preserve">
    <value>Added date</value>
  </data>
  <data name="category-name" xml:space="preserve">
    <value>Category Name</value>
  </data>
  <data name="change-password" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="confirm-password" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="current-password" xml:space="preserve">
    <value>Current password</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="dynamic-page" xml:space="preserve">
    <value>Dynamic page</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="equal-password" xml:space="preserve">
    <value>No two passwords are the same</value>
  </data>
  <data name="file-type-is-not-valid" xml:space="preserve">
    <value>file type is not valid</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>id</value>
  </data>
  <data name="incorrect-user-or-pass" xml:space="preserve">
    <value>Username or password is wrong</value>
  </data>
  <data name="is-published" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="max-length" xml:space="preserve">
    <value>The number of characters entered exceeds the limit</value>
  </data>
  <data name="menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="min-length" xml:space="preserve">
    <value>Enter at least {1} characters</value>
  </data>
  <data name="not-found" xml:space="preserve">
    <value>Nothing found</value>
  </data>
  <data name="not-success-message-text" xml:space="preserve">
    <value>Error in operation</value>
  </data>
  <data name="operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="parent-with-child-error" xml:space="preserve">
    <value>It is not possible to delete a parent with children</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="password-policy" xml:space="preserve">
    <value>Passwords must be at least 6 characters long and contain at least an upper case letter, lower case letter, digit and a symbol</value>
  </data>
  <data name="phone-number" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="post" xml:space="preserve">
    <value>Post</value>
  </data>
  <data name="post-category" xml:space="preserve">
    <value>Post category</value>
  </data>
  <data name="post-content" xml:space="preserve">
    <value>Post content</value>
  </data>
  <data name="post-list" xml:space="preserve">
    <value>List of post</value>
  </data>
  <data name="post-slug" xml:space="preserve">
    <value>Post slug</value>
  </data>
  <data name="remember-me" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="requierd" xml:space="preserve">
    <value>Pleade enter {0}</value>
  </data>
  <data name="search-result" xml:space="preserve">
    <value>Search result in</value>
  </data>
  <data name="select-image" xml:space="preserve">
    <value>Please select image</value>
  </data>
  <data name="select-item" xml:space="preserve">
    <value>Please select</value>
  </data>
  <data name="short-content" xml:space="preserve">
    <value>Short content</value>
  </data>
  <data name="side-menu-category-id" xml:space="preserve">
    <value>Side menu category</value>
  </data>
  <data name="side-menu-category-title" xml:space="preserve">
    <value>Side menu category title</value>
  </data>
  <data name="sign-in" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="sign-out" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="site-fav-icon" xml:space="preserve">
    <value>Site fav icon</value>
  </data>
  <data name="site-logo" xml:space="preserve">
    <value>Site logo</value>
  </data>
  <data name="site-setting" xml:space="preserve">
    <value>Site setting</value>
  </data>
  <data name="slug-duplicated" xml:space="preserve">
    <value>Slug is duplicate</value>
  </data>
  <data name="submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="success-message-text" xml:space="preserve">
    <value>The operation was successful</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="user-displasy-name" xml:space="preserve">
    <value>Display name</value>
  </data>
  <data name="user-not-found" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>Username</value>
  </data>
</root>